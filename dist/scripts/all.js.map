{"version":3,"sources":["main.js","Diacritics2Url.js","jquery.unveil.js","UnusableImages.js"],"names":["getPageParameter","queryStringParams","window","location","search","substring","split","i","len","length","param","copyURL","$","this","hasClass","$url_text","focus","select","document","execCommand","text","pageFoundAction","pageInfo","$DOC","data","TitleObject","title","pageid","fullurl","directUrl","encodeURI","protocol","host","pathname","val","prepareOverlay","initializeCounters","openCard","nukeStyles","isGridActive","addClass","closeCard","removeClass","setTimeout","attr","prepend","css","resizeAction","$gamepanel","gDiff","scrollTop","height","width","offset","left","scrollAction","gMobileLayout","styles2Nuke","$widgetheader","push","find","removeAttr","activeElement","blur","gFirstScroll","$historyLog","$menuClip","$answer","space","top","add","bottom","position","max-height","getBoundingClientRect","box-shadow","outerHeight","gPanelButtonPressedAction","$this","overlayAction","disable","jQueryObj","enable","str","origString","origTokens","match","normTokens","diacritics2url","replaceDiacritics","toLowerCase","replace","STD_PUNCT","wordTokens","SEP_PUNCT","guessed","zeroArray","slide","$widgetHeader","$widgetHeaderAndGuessSection","$topHeader","$widgetHeaderAndI","$widgetHeaderAndBand","$slidingUpMobile","transform","prop","z-index","border-bottom","animate","openOverlay","closeOverlay","asyncQueryForRandomUsablePage","newURL","ajax","url","dataType","then","query","pages","Object","keys","toString","filterUnusableImages","images","MIN_PAGE_IMAGES","asyncQueryForPageImages","synthImageInfoQuery","current","addImageToDocument","$wrap","randIndex","Math","floor","random","nextImageInfo","imageinfo","splice","wrappedImage","getNewImageHtml","append","incrementCounter","unveil","load","giveWordHint","tmp","n","addNewGoodWords","makeWordNode","addImagesToDocument","_","NUM_INITIAL_IMAGES","ret","unveilImgTag","resize","focusedAction","color","font-style","DEFAULT_INPUT_MESSAGE","keyupAction","blurAction","submitAction","guess","updateMenu","updateMenuMobile","type","makeOverlay","$overlayInfoWrapper","$overlayInfo","$winScreen","hide","show","html","$contains_win_screen","counterID","$counter","oldnum","outof","remove","labelInfo","$label","insertableElementClickAction","$textField","trim","slideDuration","fadeDuration","newHtml","getNewMenuHtml","words","addNewGuessHistory","hist","win","trigger","sNode","inner","wNodeList","s","j","createTextNode","gw","click","reverse","histNode","prependTo","slideDown","fadeIn","wordNodeList","appendTo","word","sock","l","res","Array","isUnusableImage","imageTitle","UNUSABLE_IMAGES","imageArray","pageImages","queryUrl","e","t","r","charCodeAt","toLocaleLowerCase","escape","a","base","letters","b","c","fn","threshold","callback","inview","filter","$e","is","wt","$w","wb","et","eb","th","loaded","not","retina","devicePixelRatio","attrib","one","source","getAttribute","setAttribute","call","on","jQuery","Zepto","linkedPageId","promisedUsablePage","when","done","Deferred","ready","$tog","resolve","scroll","$panel_buttons","keyup","change"],"mappings":"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","file":"all.js","sourcesContent":["var STD_PUNCT             = /[\\'!\"#$%&()*+,\\-.\\/:;<=>?@\\[\\]^_`{|}~]/g,\n    SEP_PUNCT             = /[\"(),<>?@\\[\\]_{}]/g,\n    NUM_INITIAL_IMAGES    = 2,\n    MIN_PAGE_IMAGES       = 4, //must be >= NUM_INITIAL_IMAGES\n    DEFAULT_INPUT_MESSAGE = 'How to...',\n    $DOC                  = $(document),\n    linkedPageId          = getPageParameter(),\n    promisedUsablePage    = asyncQueryForRandomUsablePage(linkedPageId);\nvar gFirstScroll  = false,\n    gDiff         = 0,\n    gMobileLayout = !isGridActive();\n\nvar styles2Nuke = [];\n\n$.when( //coordinates page loading (a masterpiece)\n    promisedUsablePage.then(asyncQueryForPageImages),\n    $DOC.data('readyDeferred')\n).done(addImagesToDocument);\n\n$DOC.data('readyDeferred', $.Deferred()).ready(function () {\n    var $textField = $('.textField'),\n        $tog       = $('.toggle'),\n        $gamepanel = $('.game.panel');\n\n    $.when(promisedUsablePage).done(pageFoundAction);\n\n    $DOC.data('readyDeferred').resolve();\n\n    $DOC.data('fixedFloatWidth', $gamepanel.width());\n    $DOC.data('fixedFloatLeft', $gamepanel.offset().left);\n\n    $(window).scroll(scrollAction);\n    $(window).resize(resizeAction);\n    $DOC.resize(resizeAction);\n    var $panel_buttons = $('.gb');\n    // $panel_buttons.blur(gPanelButtonBlurAction);\n    $panel_buttons.click(gPanelButtonPressedAction);\n\n    $('#imagehint').click(addImageToDocument);\n    $('#wordhint').click(giveWordHint);\n    $('.card_overlay, button.card_close').click(closeCard);\n\n    $textField.focus(focusedAction);\n    $textField.keyup(keyupAction);\n    $textField.blur(blurAction);\n    $tog.change(slide);\n\n    $('.close_link').click(closeOverlay);\n    $('.copy_link').click(copyURL);\n    $('.about').click(function () {\n        overlayAction('about');\n    });\n    // $('.top_header').click(function () {\n    //     overlayAction('win');\n    // });\n    $('.card_giveup').click(function () {\n        overlayAction('loss');\n    });\n}); //End $DOC.ready\n\nfunction getPageParameter() {\n    var queryStringParams = window.location.search.substring(1).split('&');\n    for (var i = 0, len = queryStringParams.length; i < len; i++) {\n        var param = queryStringParams[i].split('=');\n        if (param[0] === 'p') {\n            return param[1];\n        }\n    }\n}\nfunction copyURL() {\n    if ($(this).hasClass('end_screen')) {\n        var $url_text = $('.url_text.end_screen');\n    } else {\n        var $url_text = $('.url_text.share_screen');\n    }\n    $url_text.focus();\n    $url_text.select();\n    document.execCommand(\"copy\");\n    $('.copy_tooltip_text').text('Copied!');\n\n}\n\nfunction pageFoundAction(pageInfo) {\n    $DOC.data('wikiPageTitle', new TitleObject(pageInfo.title));\n    $DOC.data('wikiPageId', pageInfo.pageid);\n    $DOC.data('wikiPageURL', pageInfo.fullurl);\n\n    var directUrl = encodeURI(window.location.protocol + \"//\" + window.location.host + window.location.pathname + \"?p=\" + pageInfo.pageid);\n\n    // var tweetHref = 'https://twitter.com/intent/tweet?'+encodeURI('text=WikiWhat?&url=' + directUrl);\n    //\n    // $('.twitter').attr('href', tweetHref);\n    // var $fb = $('.facebook');\n    // var fbhref= $fb.attr('href');\n    // // $('.google_plus').attr('href', 'https://plusone.google.com/_/+1/confirm?hl=en&url=http%3A%2F%2F%20'+directUrl);\n    // console.log(fbhref.replace('INSERT_URL_HERE', directUrl));\n    // $fb.attr('href', fbhref.replace('INSERT_URL_HERE', directUrl));\n    // $('.a2a_kit').attr('data-a2a-url', directUrl);\n    $('.url_text').val(directUrl);\n    prepareOverlay(pageInfo);\n    initializeCounters();\n}\n\n\n\nfunction openCard() {\n    nukeStyles();\n    if (isGridActive()) {\n        $('.menu_clip').addClass('slid');\n    }\n    $('.card').addClass('slid');\n    $('.card_overlay').addClass('selected');\n    $('.card_clip').addClass('higherZIndex');\n}\n\nfunction closeCard() {\n    $('.card_overlay').removeClass('selected');\n    setTimeout(function () {\n        $('.card_message').removeClass('selected');\n    }, 400);\n    $('.card, .menu_clip').removeClass('slid');\n\n    $('.card_clip').removeClass('higherZIndex');\n\n}\n\nfunction prepareOverlay(pageInfo) {\n    $('.page_link').attr('href', pageInfo.fullurl).prepend('<span>How to ' + pageInfo.title + '</span>');\n}\n\nfunction isGridActive() {\n    return ($('.trim').css('display') !== 'none');\n}\n\nfunction resizeAction() {\n    var $gamepanel = $('.panel.game');\n\n    gDiff = $DOC.scrollTop() + $(window).height() - ($DOC.height() - $('.page_footer').height());\n\n    $DOC.data('fixedFloatWidth', $gamepanel.width());\n    $DOC.data('fixedFloatLeft', $gamepanel.offset().left);\n    scrollAction();\n    if (isGridActive()) {\n        if (gMobileLayout) {\n            gMobileLayout = false;\n            nukeStyles();\n        }\n    } else {\n        if (!gMobileLayout) {\n            gMobileLayout = true;\n            nukeStyles();\n        }\n    }\n}\n\nfunction nukeStyles() {\n    if (styles2Nuke.length === 0) {\n        var $widgetheader = $('.widget_header');\n        styles2Nuke.push(\n            $('.history_log'),\n            $('.menu_clip'),\n            $('.sliding_up_mobile'),\n            $widgetheader,\n            $widgetheader.find('i'),\n            $widgetheader.find('.band'),\n            $('.guessSection'),\n            $('.spacie')\n        );\n    }\n    for (var i = styles2Nuke.length; i <= 0; i--) {\n        styles2Nuke[i].removeAttr('style');\n    }\n    $('.answer').css('box-shadow', ''); //done separately to preserve custom 'bottom' prop\n    $('.toggle').removeAttr('checked');\n}\n\nfunction scrollAction() {\n    if ($(document.activeElement).hasClass('gb')) {\n        $(document.activeElement).blur();\n    }\n    if (isGridActive()) {\n        if (!gFirstScroll) {\n            gFirstScroll = true;\n            resizeAction();\n            return;\n        }\n        var $gamepanel  = $('.game.panel'),\n            $historyLog = $('.history_log'),\n            $menuClip   = $('.menu_clip'),\n            $answer     = $('.answer'),\n            space       = $(window).scrollTop() - ($gamepanel.offset().top + $gamepanel.height());\n\n        closeCard();\n        gDiff = $(window).scrollTop() + $(window).height() - $('.page_footer').offset().top;\n\n        if (gDiff > 0) {\n            $answer.add($menuClip).css({bottom: gDiff});\n        } else {\n            $answer.add($menuClip).css({bottom: 0});\n        }\n        if (space > 0) {\n            $('.spacie').css({\n                position: 'relative'\n            });\n            $historyLog.css({\n                \"max-height\": $answer[0].getBoundingClientRect().top - $historyLog[0].getBoundingClientRect().top - 30\n            });\n            $menuClip.css({\n                position: 'fixed',\n                width: $DOC.data('fixedFloatWidth'),\n                top: 20,\n                left: $DOC.data('fixedFloatLeft')\n            });\n            $menuClip.find('.panel').css({\n                'box-shadow': '0 0 8px rgba(0, 0, 0, 0.16)'\n            });\n        } else {\n            $menuClip.css({\n                position: '',\n                width: '',\n                top: '',\n                left: '',\n                'box-shadow': ''\n            });\n            $menuClip.find('.panel').css({\n                'box-shadow': ''\n            });\n            $('.spacie').css({\n                position: 'absolute',\n                height: $menuClip.outerHeight(true)\n            });\n        }\n    }\n}\n\nfunction gPanelButtonPressedAction() {\n    $('.card_message').removeClass('selected');\n    var $this = $(this);\n    if ($this.attr('id') === 'rules') {\n        overlayAction('rules');\n        return;\n    }\n    if ($this.attr('id') === 'giveup') {\n        $('.giveup_confirmation').addClass('selected');\n    } else if ($this.attr('id') === 'restart') {\n        $('.restart_confirmation').addClass('selected');\n    } else if ($this.attr('id') === 'share') {\n        $('.sharingsux').addClass('selected');\n    }\n    openCard();\n}\n\nfunction disable(jQueryObj) {\n    return jQueryObj.attr('disabled', 'true');\n}\n\nfunction enable(jQueryObj) {\n    return jQueryObj.removeAttr('disabled');\n}\n\nfunction TitleObject(str) {\n    this.origString = str;\n    this.origTokens = str.match(/\\S+/g); //original chars/punct\n    this.normTokens =\n        diacritics2url.replaceDiacritics(str.toLowerCase().replace(STD_PUNCT, ''))\n            .match(/\\S+/g);\n    this.wordTokens = str.replace(SEP_PUNCT, '').match(/\\S+/g);\n    this.guessed = zeroArray(this.origTokens.length);\n}\n\nfunction slide() {\n    var $this                        = $(this),\n        $widgetHeader                = $('.widget_header'),\n        $widgetHeaderAndGuessSection = $widgetHeader.add('.guessSection'),\n        $answer                      = $('.answer'),\n        $menuClip                    = $('.menu_clip'),\n        $topHeader                   = $('.top_header'),\n        $widgetHeaderAndI            = $widgetHeader.find('i'),\n        $widgetHeaderAndBand         = $widgetHeader.find('.band'),\n        $slidingUpMobile             = $('.sliding_up_mobile');\n\n    $slidingUpMobile.css({\n        \"transform\": \"translate(0,0)\"\n    });\n    if (!$this.prop('checked')) {\n        $slidingUpMobile.animate({\n            \"transform\": \"translate(0,0)\"\n        }, 500, 'swing', function () {\n            $widgetHeaderAndGuessSection.css({\n                'box-shadow': 'none'\n            });\n            $answer.css({\n                'box-shadow': '0 0 10px rgba(0, 0, 0, 0.16)'\n            });\n            $menuClip.add($topHeader).removeAttr('style');\n        });\n\n        $widgetHeaderAndI.css({\n            \"transform\": \"rotate(0deg)\"\n        });\n        $widgetHeaderAndBand.css({\n            'border-bottom': '.5px solid #8a8a89'\n        });\n\n    } else {\n        closeCard();\n        $menuClip.css({\n            \"z-index\": 1\n        });\n        $topHeader.css({\n            \"z-index\": 1\n        });\n        $slidingUpMobile.css({\n            \"transform\": \"translate(0,-\" + $('.menu').height() + \"px)\"\n        });\n        $widgetHeaderAndI.css({\n            \"transform\": \"rotate(180deg)\"\n        });\n        $widgetHeaderAndBand.css({\n            'border-bottom': 'none'\n        });\n        $widgetHeaderAndGuessSection.css({\n            'box-shadow': '0 0 10px rgba(0, 0, 0, 0.16)'\n        });\n        $answer.css({\n            'box-shadow': 'none'\n        });\n    }\n}\n\nfunction openOverlay() {\n    $('.overlay').height('100%');\n}\n\nfunction closeOverlay() {\n    $('.overlay').height('0');\n}\n\nfunction asyncQueryForRandomUsablePage(pageid) {\n    /* request random article and see if it has enough usable images*/\n    var pageid = pageid || null;\n    var newURL;\n    if (pageid != null) {\n        newURL = 'https://www.wikihow.com/api.php?action=query&format=json&prop=info%7Cimages&pageids=' + pageid + '&inprop=url&imlimit=100';\n    } else {\n        newURL = 'https://www.wikihow.com/api.php?action=query&format=json&prop=info%7Cimages&generator=random&inprop=url&imlimit=100&grnnamespace=0#';\n    }\n\n\n    return $.ajax({ //get random page using mediawiki API\n        url: newURL,\n        dataType: 'jsonp'\n    }).then(function (data) {\n        /*The mediawiki api answers our request with a complex json object structure.\n         However, all of the data we're interested in is kept in a sub-object, \"pageInfo\"\n         Accessing it requires making this series of calls:\n         var page = jsonpData.query.pages;\n         var pageId = Object.keys(page)[0];\n         var pageInfo = page[pageId.toString()];\n         This is condensed to the lines below: */\n        var pageInfo = data.query.pages[Object.keys(data.query.pages)[0].toString()];\n        // console.log(pageInfo);\n        // console.log(pageInfo.fullurl);\n        // console.log(pageInfo.images);\n        filterUnusableImages(pageInfo.images);\n\n\n        if (pageInfo.images == null || // == is intentional, checks for undefined\n            pageInfo.images.length < MIN_PAGE_IMAGES ||\n            pageInfo.title.length > 256) {\n\n            return asyncQueryForRandomUsablePage(); //try again\n        }\n        return pageInfo;\n    });\n}\n\nfunction asyncQueryForPageImages(pageInfo) {\n    return $.ajax({ //make another async. request for image urls\n        url: synthImageInfoQuery(pageInfo.images),\n        dataType: 'jsonp'\n    }).then(function (data) {\n        //create array and fill w/ slightly more accessable image data\n        var images = [];\n        var keys = Object.keys(data.query.pages);\n\n        for (var i = 0; i < keys.length; i++) {\n            //put image objects in new array\n            if (keys[i] > 0) { //missing images have ids of -1; don't include\n                var current = data.query.pages[keys[i].toString()];\n                images.push(current);\n            }\n        }\n        return images;\n    });\n}\n\nfunction addImageToDocument() {\n    var images = $DOC.data('undisplayedImages');\n    if (images.length !== 0) {\n        var $wrap = $('.wrap');\n        var randIndex = Math.floor(Math.random() * images.length);\n        var nextImageInfo = images[randIndex].imageinfo[0];\n\n        images.splice(randIndex, 1); //removes used image from array and shifts all subsequent indexes down 1\n\n        var wrappedImage = getNewImageHtml(nextImageInfo);\n        $wrap.append(wrappedImage);\n        incrementCounter('numImageHints');\n\n        $(wrappedImage.find('img')[0]).unveil(0, function () {\n            $(this).load(function () {\n                scrollAction();\n            })\n        });\n        if (images.length < 1) {\n            disable($(this)); //disable button calling this as a listener funct.\n        }\n    } else {\n        disable($(this));\n    }\n\n}\n\nfunction giveWordHint() {\n    var title = $DOC.data('wikiPageTitle');\n    var tmp = [];\n    for (var i = title.normTokens.length - 1; i >= 0; i--) {\n        if (title.guessed[i] === 0) {\n            tmp.push(i);\n        }\n    }\n    if (tmp.length >= 1) {\n        var n = Math.floor(Math.random() * tmp.length);\n        title.guessed[tmp[n]]++;\n        incrementCounter('numWordHints');\n\n        addNewGoodWords(makeWordNode(title.wordTokens[tmp[n]]), 'slow');\n        if (tmp.length === 1) {\n            disable($(this)); //disable button calling this as a listener funct.\n        }\n    } else {\n        disable($(this)); //disable button calling this as a listener funct.\n    }\n}\n\nfunction addImagesToDocument(images, _) { //argument _ is extra passed in from $.when().done()\n    var $wrap = $('.wrap');\n    $DOC.data('undisplayedImages', images);\n    for (var i = 0; i < NUM_INITIAL_IMAGES && images.length !== 0; i++) {\n        var randIndex     = Math.floor(Math.random() * images.length),\n            nextImageInfo = images[randIndex].imageinfo[0];\n        images.splice(randIndex, 1); //removes used image from array and shifts all subsequent indexes down 1\n\n        var wrappedImage = getNewImageHtml(nextImageInfo);\n        $wrap.append(wrappedImage);\n        $(wrappedImage.find('img')[0]).unveil(0, function () {\n            $(this).load(function () {\n                scrollAction();\n            })\n        });\n    }\n}\n\n/*getNewImageHtml returns a new jQ node representing the input image\n wrapped in a page image wrapper*/\nfunction getNewImageHtml(nextImageInfo) {\n    var ret          = $('<div class=\"box_wrapper floatyWrapper row\"></div>'),\n        unveilImgTag = $('<img class=\"pageImage u-max-full-width\" src=\"/images/ring.gif\"/>');\n\n    ret.resize(function () {\n        resizeAction();\n    });\n    // TODO: make media delivery responsive/make sense (this isn't quite it)\n    // if (!isGridActive()) {\n    //     unveilImgTag.attr('data-src', nextImageInfo.thumburl);\n    //     console.log('thumb');\n    // } else {\n        unveilImgTag.attr('data-src', nextImageInfo.url);\n    // }\n    return ret.append(unveilImgTag);\n}\n\n/*focusedAction fires when text input gains focus.\n If the default message was present, it is cleared.\n The text color is set to its normal value (as opposed to the\n greyed-out color of the default message).\n */\nfunction focusedAction() {\n    var $this = $(this);\n\n    /*NOTE: hard coded color value of focused textbox text*/\n    $this.css({color: '#222', 'font-style': 'normal'});\n    if ($this.val() === DEFAULT_INPUT_MESSAGE) {\n        $this.val('');\n    }\n}\n\n/*keyupAction fires when a key is released while typing in text input.\n Enables/disables submit button based on presence of text*/\nfunction keyupAction() {\n    if ($(this).val() !== '')\n        enable($('.guessSubmit'));\n    else\n        disable($('.guessSubmit'));\n}\n\n/*blurAction fires when text input loses focus.\n Enables/disables submit button in the same way as keyupAction.\n If input is empty, replaces the default message text and styling*/\nfunction blurAction() {\n    var $this = $(this);\n    if ($this.val() !== '')\n        enable($('.guessSubmit'));\n    else {\n        $this.val(DEFAULT_INPUT_MESSAGE);\n        $this.css({color: '#8a8a89', 'font-style': 'italic'});\n        disable($('.guessSubmit'));\n    }\n}\n\n/*submitAction is called when a guess is submitted\n Guess info is obtained by looking at the value of the textbox.\n Updates to guess history and known words are performed.\n The menu is scrolled to put the new history entry into view.*/\nfunction submitAction() {\n    var $menu = $('.menu'),\n        str   = $('.textField').val(),\n        guess = new TitleObject(str.replace(/^\\s*how\\s+to\\s+/gi, '')),\n        title = $DOC.data('wikiPageTitle');\n\n    if (isGridActive()) {\n        if (updateMenu(guess, 'slow', 'slow')) {\n            overlayAction('win');\n        }\n    } else {\n        if (updateMenuMobile(guess, 'slow', 'slow')) {\n            overlayAction('win');\n        }\n    }\n    $('.textField').val('');\n}\n\nfunction overlayAction(type) {\n    makeOverlay(type);\n    openOverlay();\n}\n\nfunction makeOverlay(type) {\n\n    var $overlayInfoWrapper = $('.overlay_info_wrapper');\n    var $overlayInfo = $overlayInfoWrapper.find('.overlay_info');\n    var $winScreen = $('.win_screen');\n\n    $overlayInfo.hide();\n    $overlayInfoWrapper.removeClass('contains_attribs').removeClass('contains_win_screen').removeClass('contains_rules_screen');\n    switch (type) {\n        case 'win':\n            $('.score').show();\n            $overlayInfoWrapper.addClass('contains_win_screen');\n            $winScreen.show().find('h2').text('Yep!');\n            // $('.win_screen h2').text('Yep!');\n            $winScreen.find('h2 + h6').html('<i>Of course</i> we\\'re learning');\n            // $('.win_screen h2 + h6').html('<i>Of course</i> we\\'re learning');\n            var $contains_win_screen = $('.contains_win_screen');\n            $contains_win_screen.css({top: ($(window).height() - $contains_win_screen.outerHeight(true)) / 2});\n            break;\n        case 'loss':\n            $('.score').hide();\n            $overlayInfoWrapper.addClass('contains_win_screen');\n            $winScreen.show().find('h2').text('¯\\\\_(ツ)_/¯');\n            // $('.win_screen h2').text('¯\\\\_(ツ)_/¯');\n\n            $winScreen.find('h2 + h6').html('We were clearly going for');\n            // $('.win_screen h2 + h6').html('We were clearly going for');\n\n            var $contains_win_screen = $('.contains_win_screen');\n            $contains_win_screen.css({top: ($(window).height() - $contains_win_screen.outerHeight(true)) / 2});\n            break;\n        case 'about':\n            $overlayInfoWrapper.addClass('contains_attribs').css({top: ($(window).height() - $('.contains_attribs').outerHeight(true)) / 2});\n            $('.attribs').show();\n            break;\n        case 'rules':\n            $overlayInfoWrapper.addClass('contains_rules_screen').css({top: ($(window).height() - $('.contains_rules_screen').outerHeight(true)) / 2});\n            $('.rules_screen').show();\n            break;\n    }\n}\n\nfunction initializeCounters() {\n    $('.counter').data('num', 0);\n    $('#numImageHints').data('num', NUM_INITIAL_IMAGES);\n\n    $('#numImageHints').data('labelInfo', ['image', 'images']);\n    $('#numWordHints').data('labelInfo', ['hint', 'hints']);\n    $('.numGuesses').data('labelInfo', ['try', 'tries']);\n    $('#numWords').data('outof', $DOC.data('wikiPageTitle').normTokens.length);\n\n    $('.counter').text('0');\n    $('#numImageHints').text(NUM_INITIAL_IMAGES);\n    $('#numWords').text('(0/' + $('#numWords').data('outof') + ')');\n}\n\nfunction incrementCounter(counterID) {\n    var $counter = counterID === 'numGuesses' ? $('.' + counterID) : $('#' + counterID),\n        oldnum   = $counter.data('num');\n\n    $counter.data('num', oldnum + 1);\n    $counter.text(oldnum + 1);\n\n    if (counterID === 'numWords') {\n        var outof = $counter.data('outof');\n        if (oldnum + 1 !== 0) {\n            $('.empty_message').remove();\n        }\n        $counter.text('(' + (oldnum + 1) + '/' + outof + ')');\n    }\n\n    var labelInfo = $counter.data('labelInfo');\n    if (labelInfo) {\n        var $label = $('#' + counterID + '_label');\n        if (oldnum + 1 === 1) {\n            $label.text(labelInfo[0]);\n        } else if (oldnum + 1 === 2) {\n            $label.text(labelInfo[1]);\n        }\n    }\n}\n\nfunction insertableElementClickAction() {\n    var $textField = $('.textField');\n\n    $textField.focus();\n    if ($textField.val() === '') {\n        $textField.val($(this).text().trim());\n    } else {\n        $textField.val($textField.val() + ' ' + $(this).text().trim());\n    }\n}\n\n/*updateMenu delegates the creation of new DOM nodes for the guess\n and coordinates their addition to the document with respect to their\n elements' animation speeds*/\nfunction updateMenu(guess, slideDuration, fadeDuration) {\n    var newHtml = getNewMenuHtml(guess, $DOC.data('wikiPageTitle'));\n    addNewGoodWords(newHtml.words, fadeDuration);\n    addNewGuessHistory(newHtml.hist, slideDuration, fadeDuration);\n    return newHtml.win;\n}\n\nfunction updateMenuMobile(guess, slideDuration, fadeDuration) {\n    if (!$('.toggle').prop('checked'))\n        $('.toggle').trigger('click');\n    return updateMenu(guess, slideDuration, fadeDuration);\n}\n\n/*getNewMenuHtml goes through the new guess word-by-word and creates\n the DOM nodes that will display them. All words are explicitly added as\n text nodes (to avoid xss), and correct words are wrapped in an extra <span>\n for highlighting. Newly guessed correct words are also packaged into\n elements for the list of good words. Results returned in object containing\n an sNode (single jQuery node with the new history entry) and a wNodeList\n (possibly empty array of jQuery selectable_container-class nodes each\n representing a new good word)*/\nfunction getNewMenuHtml(guess, title) {\n    var sNode     = $('<div class=\"guess_container\"><div class=\"inner menuText\"></div></div><hr>'),\n        inner     = sNode.find('.inner'),\n        wNodeList = [],\n        s         = '',\n        win       = (guess.normTokens.length === title.normTokens.length);\n\n    for (var i = 0; i < guess.normTokens.length; i++) {\n        for (var j = 0; j < title.normTokens.length; j++) {\n            if (i === j && guess.normTokens[i] !== title.normTokens[j]) {\n                win = false;\n            }\n            if (guess.normTokens[i] === title.normTokens[j]) {\n                inner.append(document.createTextNode(s));\n                s = '';\n                var gw = $('<em></em>').text(guess.origTokens[i].trim() + ' ');\n                gw.click(insertableElementClickAction);\n                inner.append(gw);\n                if (title.guessed[j] === 0) {\n                    wNodeList.push(makeWordNode(title.origTokens[j]));\n                }\n                guess.guessed[i]++;\n                title.guessed[j]++;\n                break;\n            } else if (j === title.normTokens.length - 1) { //no match & this is last time comparing this guess tok\n                s = s + guess.origTokens[i] + ' ';\n            }\n        }\n    }\n    inner.append(document.createTextNode(s));\n    return {'words': wNodeList.reverse(), 'hist': sNode, 'win': win};\n}\n\n/*addNewGuessHistory animates the new guess history entry element node\n into the history list in the menu. New entry fades in over fadeDuration\n while older entries slide down over slideDuration*/\nfunction addNewGuessHistory(histNode, slideDuration, fadeDuration) {\n    incrementCounter('numGuesses');\n    $('.empty_message_hist').remove();\n    $(histNode).hide().prependTo('.history_log').slideDown(\n        slideDuration).fadeIn(fadeDuration);\n}\n\n/*addNewGoodWords iterates over the list of new good word nodes and fades\n each one into the document over a specified fadeDuration*/\nfunction addNewGoodWords(wordNodeList, fadeDuration) {\n\n    for (var i = wordNodeList.length - 1; i >= 0; i--) {\n        $(wordNodeList[i]).hide().appendTo('.good_words').fadeIn('fadeDuration');\n        incrementCounter('numWords');\n    }\n}\n\n/*makeWordNode returns a \"good_word\"-style jQ node with input text string*/\nfunction makeWordNode(word) {\n    var sock = $('<div class=\"selectable_container\"><span class=\"word menuText\"></span></div>'),\n        tmp  = sock.find('.word')[0];\n    $(tmp).text(word);\n    $(tmp).click(insertableElementClickAction);\n    return sock;\n}\n\n/*zeroArray returns a new zero-filled array of length l*/\nfunction zeroArray(l) {\n    var res = new Array(l);\n    while (--l >= 0) {\n        res[l] = 0;\n    }\n    return res;\n}\n\n/*isUnusableImage checks the title of an image against a collection of\n titles known to belong to junk images (found in UnusableImages.scripts).\n Returns true if a match is identified.\n Unusable (junk) images are parts of wikihow page templates that the server\n returns alongside actual article images*/\nfunction isUnusableImage(imageTitle) {\n    for (var i = UNUSABLE_IMAGES.length - 1; i >= 0; i--) {\n        if (UNUSABLE_IMAGES[i] === imageTitle) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/*filterUnusableImages iterates through a list of images, calling\n isUnusableImage on the title of each one. If an image is found to be\n unusable, it is removed from the array and discarded.\n This method modifies the input directly and does not have a return value*/\nfunction filterUnusableImages(imageArray) {\n    if (imageArray != null) { // != is intentional, checks for undefined\n        for (var i = imageArray.length - 1; i >= 0; i--) {\n            if (isUnusableImage(imageArray[i].title))\n                imageArray.splice(i, 1);\n        }\n    }\n}\n\n/*synthImageInfoQuery returns a url-encoded string written to query\n wikihow's mediawiki api for source information on the specific\n images contained in the input list. */\nfunction synthImageInfoQuery(pageImages) {\n    //base url to query api for image sources\n    var queryUrl =\n            'https://www.wikihow.com/api.php?action=query&format=json&prop=imageinfo&titles=';\n    //append image titles seperated by '%7C' (url encoded '|')\n    for (var i = 0; i < pageImages.length; i++) {\n        queryUrl = queryUrl + pageImages[i].title;\n        if (i < pageImages.length - 1)\n            queryUrl = queryUrl + '%7C'; //url-encoded '|'\n        else\n            queryUrl = queryUrl + '&iiprop=url%7Csize&iiurlwidth=500'; //additional query properties\n    }\n    queryUrl = queryUrl.replace(/ /g, '+'); //url-encode spaces\n    return queryUrl;\n}\n","/*\r\nDiacritics2Url\r\nConverts any string to an readable URL.\r\nhttps://github.com/MOuli90/Diacritics2Url\r\n\r\nCopyright (c) 2014, Alexander Kopp\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n* Redistributions of source code must retain the above copyright notice, this\r\n list of conditions and the following disclaimer.\r\n\r\n* Redistributions in binary form must reproduce the above copyright notice,\r\n this list of conditions and the following disclaimer in the documentation\r\n and/or other materials provided with the distribution.\r\n\r\n* Neither the name of the {organization} nor the names of its\r\n contributors may be used to endorse or promote products derived from\r\n this software without specific prior written permission.\r\n\r\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\r\n IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\r\n THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\r\n OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\r\n HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\r\n LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\r\n DAMAGE\r\n*/\r\n!function(e){function t(e){return e.replace(/[^\\u0000-\\u0020\\u0041-\\u00A0\\u0030-\\u0039]/g,function(e){return r[e.charCodeAt(0)]||e})}function s(e){return e=t(e),e=e.toLocaleLowerCase(),e=e.replace(/[^a-z0-9]/g,\"-\"),e=e.replace(/\\-{2,}/g,\"-\"),e=e.replace(/^-|-$/g,\"\"),escape(e)}for(var a=[{base:\"A\",letters:\"AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ\"},{base:\"AA\",letters:\"Ꜳ\"},{base:\"AE\",letters:\"ÆǼǢｮ\"},{base:\"Ae\",letters:\"Ä\"},{base:\"AO\",letters:\"Ꜵ\"},{base:\"AU\",letters:\"Ꜷ\"},{base:\"AV\",letters:\"ꜸꜺ\"},{base:\"AY\",letters:\"Ꜽ\"},{base:\"a\",letters:\"ªaⓐａẚàáâầấẫẩãāăằắẵẳȧǡǟảåǻǎȁȃạậặḁąⱥɐ\"},{base:\"aa\",letters:\"ꜳ\"},{base:\"ae\",letters:\"æǽǣä\"},{base:\"ao\",letters:\"ꜵ\"},{base:\"at\",letters:\"@＠\"},{base:\"au\",letters:\"ꜷ\"},{base:\"av\",letters:\"ꜹꜻ\"},{base:\"ay\",letters:\"ꜽ\"},{base:\"B\",letters:\"BⒷＢḂḄḆɃƂƁ\"},{base:\"b\",letters:\"bⓑｂḃḅḇƀƃɓ\"},{base:\"C\",letters:\"©CⒸＣĆĈĊČÇḈƇȻꜾｩ\"},{base:\"c\",letters:\"cⓒｃćĉċčçḉƈȼꜿↄ\"},{base:\"D\",letters:\"ÐDⒹＤḊĎḌḐḒḎĐƋƊƉꝹ\"},{base:\"DZ\",letters:\"ǱǄ\"},{base:\"Dz\",letters:\"ǲǅ\"},{base:\"d\",letters:\"dⓓｄḋďḍḑḓḏđƌɖɗꝺ\"},{base:\"dz\",letters:\"ǳǆ\"},{base:\"E\",letters:\"EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ\"},{base:\"e\",letters:\"eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ\"},{base:\"F\",letters:\"FⒻＦḞƑꝻ\"},{base:\"f\",letters:\"fⓕｆḟƒꝼ\"},{base:\"G\",letters:\"GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ\"},{base:\"g\",letters:\"gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ\"},{base:\"H\",letters:\"HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ\"},{base:\"h\",letters:\"hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ\"},{base:\"hv\",letters:\"ƕ\"},{base:\"I\",letters:\"IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ\"},{base:\"IJ\",letters:\"Ĳ\"},{base:\"i\",letters:\"iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı\"},{base:\"ij\",letters:\"ĳ\"},{base:\"J\",letters:\"JⒿＪĴɈ\"},{base:\"j\",letters:\"jⓙｊĵǰɉ\"},{base:\"K\",letters:\"KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ\"},{base:\"k\",letters:\"kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ\"},{base:\"L\",letters:\"LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ\"},{base:\"LJ\",letters:\"Ǉ\"},{base:\"Lj\",letters:\"ǈ\"},{base:\"l\",letters:\"lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ\"},{base:\"lj\",letters:\"ǉ\"},{base:\"M\",letters:\"MⓂＭḾṀṂⱮƜ\"},{base:\"m\",letters:\"mⓜｍḿṁṃɱɯ\"},{base:\"N\",letters:\"NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ\"},{base:\"NJ\",letters:\"Ǌ\"},{base:\"Nj\",letters:\"ǋ\"},{base:\"n\",letters:\"nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ\"},{base:\"nj\",letters:\"ǌ\"},{base:\"O\",letters:\"OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ\"},{base:\"Oe\",letters:\"Ö\"},{base:\"OI\",letters:\"Ƣ\"},{base:\"OO\",letters:\"Ꝏ\"},{base:\"OU\",letters:\"Ȣ\"},{base:\"o\",letters:\"oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ\"},{base:\"oe\",letters:\"ö\"},{base:\"oi\",letters:\"ƣ\"},{base:\"ou\",letters:\"ȣ\"},{base:\"oo\",letters:\"ꝏ\"},{base:\"P\",letters:\"PⓅＰṔṖƤⱣꝐꝒꝔ\"},{base:\"p\",letters:\"pⓟｐṕṗƥᵽꝑꝓꝕ\"},{base:\"Q\",letters:\"QⓆＱꝖꝘɊ\"},{base:\"q\",letters:\"qⓠｑɋꝗꝙ\"},{base:\"R\",letters:\"®RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂｨ\"},{base:\"r\",letters:\"rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ\"},{base:\"S\",letters:\"SⓈＳŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ\"},{base:\"SS\",letters:\"ẞ\"},{base:\"s\",letters:\"sⓢｓśṥŝṡšṧṣṩșşȿꞩꞅẛ\"},{base:\"ss\",letters:\"ßｧ\"},{base:\"T\",letters:\"TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ\"},{base:\"TZ\",letters:\"Ꜩ\"},{base:\"TM\",letters:\"ｪ\"},{base:\"t\",letters:\"tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ\"},{base:\"tz\",letters:\"ꜩ\"},{base:\"U\",letters:\"UⓊＵÙÚÛŨṸŪṺŬǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ\"},{base:\"Ue\",letters:\"Ü\"},{base:\"u\",letters:\"uⓤｕùúûũṹūṻŭǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ\"},{base:\"ue\",letters:\"ü\"},{base:\"V\",letters:\"VⓋＶṼṾƲꝞɅ\"},{base:\"VY\",letters:\"Ꝡ\"},{base:\"v\",letters:\"vⓥｖṽṿʋꝟʌ\"},{base:\"vy\",letters:\"ꝡ\"},{base:\"W\",letters:\"WⓌＷẀẂŴẆẄẈⱲ\"},{base:\"w\",letters:\"wⓦｗẁẃŵẇẅẘẉⱳ\"},{base:\"X\",letters:\"XⓍＸẊẌ\"},{base:\"x\",letters:\"xⓧｘẋẍ\"},{base:\"Y\",letters:\"YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ\"},{base:\"y\",letters:\"yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ\"},{base:\"Z\",letters:\"ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ\"},{base:\"z\",letters:\"zⓩｚźẑżžẓẕƶȥɀⱬꝣ\"},{base:\"0\",letters:\"0０\"},{base:\"1\",letters:\"1¹１\"},{base:\"2\",letters:\"2²２\"},{base:\"3\",letters:\"3³３\"},{base:\"4\",letters:\"4４\"},{base:\"5\",letters:\"5５\"},{base:\"6\",letters:\"6６\"},{base:\"7\",letters:\"7７\"},{base:\"8\",letters:\"8８\"},{base:\"9\",letters:\"9９\"}],r={},l=0;l<a.length;l++)for(var b=a[l].letters.split(\"\"),c=0;c<b.length;c++)r[b[c].charCodeAt(0)]=a[l].base;e.diacritics2url=s,e.diacritics2url.replaceDiacritics=t}(window);","/**\r\n * jQuery Unveil\r\n * A very lightweight jQuery plugin to lazy load images\r\n * http://luis-almeida.github.com/unveil\r\n *\r\n * Licensed under the MIT license.\r\n * Copyright 2013 Luís Almeida\r\n * https://github.com/luis-almeida\r\n */\r\n\r\n;(function($) {\r\n\r\n  $.fn.unveil = function(threshold, callback) {\r\n\r\n    var $w = $(window),\r\n        th = threshold || 0,\r\n        retina = window.devicePixelRatio > 1,\r\n        attrib = retina? \"data-src-retina\" : \"data-src\",\r\n        images = this,\r\n        loaded;\r\n\r\n    this.one(\"unveil\", function() {\r\n      var source = this.getAttribute(attrib);\r\n      source = source || this.getAttribute(\"data-src\");\r\n      if (source) {\r\n        this.setAttribute(\"src\", source);\r\n        if (typeof callback === \"function\") callback.call(this);\r\n      }\r\n    });\r\n\r\n    function unveil() {\r\n      var inview = images.filter(function() {\r\n        var $e = $(this);\r\n        if ($e.is(\":hidden\")) return;\r\n\r\n        var wt = $w.scrollTop(),\r\n            wb = wt + $w.height(),\r\n            et = $e.offset().top,\r\n            eb = et + $e.height();\r\n\r\n        return eb >= wt - th && et <= wb + th;\r\n      });\r\n\r\n      loaded = inview.trigger(\"unveil\");\r\n      images = images.not(loaded);\r\n    }\r\n\r\n    $w.on(\"scroll.unveil resize.unveil lookup.unveil\", unveil);\r\n\r\n    unveil();\r\n\r\n    return this;\r\n\r\n  };\r\n\r\n})(window.jQuery || window.Zepto);","var UNUSABLE_IMAGES = [\r\n   \"Image:Inaccurate1_469.gif\",\r\n   \"Image:Spotlightnes3_241.png\",\r\n   \"Image:Info_317.png\",\r\n   \"Image:Barnstar.png\",\r\n   \"Image:LinkFA star.jpg\",\r\n   \"Image:Barnstar_of_Humour3_910.png\",\r\n   \"Image:WikiDefender_Barnstar_353.png\",\r\n   \"Image:Barnstar camera_91.png\",\r\n   \"Image:Stop hand_731.png\",\r\n   \"Image:ProtoClarity.png\",\r\n   \"Image:Template icon Needs editing_501.gif\",\r\n   \"Image:Template icon Needs editing_501.gif\",\r\n   \"Image:197px Copyright.svg.png\",\r\n   \"Image:Heckert_GNU_white_975.png\",\r\n   \"Image:FA candidate alpha.png\",\r\n   \"Image:Needs formatting_451.gif\",\r\n   \"Image:ATTENTION4.gif\",\r\n   \"Image:TITLE6.png\",\r\n   \"Image:InUseClock.png\",\r\n   \"Image:30px Apple_logo.gif\",\r\n   \"Image:Laptopnigeria.jpg\",\r\n   \"Image:Merge_590.png\",\r\n   \"Image:Inaccurate2.gif\",\r\n   \"Image:Page discussion_71.gif\",\r\n   \"Image:Photoround.png\",\r\n   \"Image:Magglass_326.png\",\r\n   \"Image:Furcongrat.png\",\r\n   \"Image:141123835_cf8cafd149.jpg\",\r\n   \"Image:Stop hand_731.png\",\r\n   \"Image:ProtoSplit.png\",\r\n   \"Image:Spotlightnes3_241.png\",\r\n   \"Image:Incomplete_856.gif\",\r\n   \"Image:172665796_c35bd3fbbe.jpg\",\r\n   \"Image:140030475_c8bd9744f2.jpg\",\r\n   \"Image:44771952_9b0223c408.jpg\",\r\n   \"Image:251140793_165d14e568.jpg\",\r\n   \"Image:Smile Face 180.jpg\",\r\n   \"Image:ProtoTitle.png\",\r\n   \"Image:AwardTeamStarUIB.png\",\r\n   \"Image:Dimanche_826.PNG\",\r\n   \"Image:GMTm5.png\",\r\n   \"Image:Crystal_email_474.png\",\r\n   \"Image:120px Flag_of_Australia.svg.png\",\r\n   \"Image:120px Flag_of_the_United_Kingdom.svg.png\",\r\n   \"Image:120px Flag_of_the_United_States.svg.png\",\r\n   \"Image:Firefoxlogo.png\",\r\n   \"Image:Face grin expert 8573.png\",\r\n   \"Image:IELogo.png\",\r\n   \"Image:Tux..png\",\r\n   \"Image:MacLogo_508.png\",\r\n   \"Image:Facesmilebig.png\",\r\n   \"Image:GMTm7.png\",\r\n   \"Image:GMTm8.png\",\r\n   \"Image:Exquisite kfind_376.png\",\r\n   \"Image:SAC6.png\",\r\n   \"Image:Face monkey_215.png\",\r\n   \"Image:UserAK.gif\",\r\n   \"Image:UserAL.gif\",\r\n   \"Image:UserAZ.gif\",\r\n   \"Image:WikiAdminUIB.png\",\r\n   \"Image:Microsoft logo.png\",\r\n   \"Image:IconDude.png\",\r\n   \"Image:24872178_1365e66ee6.jpg\",\r\n   \"Image:48840696_fd62f17b25.jpg\",\r\n   \"Image:182633915_1131e22a03.jpg\",\r\n   \"Image:JWM.gif\",\r\n   \"Image:JWM.gif\",\r\n   \"Image:Welcome_mat.jpg\",\r\n   \"Image:Boat.jpg\",\r\n   \"Image:Welcome_neon.jpg\",\r\n   \"Image:Welcome_mat.jpg\"\r\n];\r\n"],"sourceRoot":"/source/"}